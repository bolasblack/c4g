// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`node-new support \`author\` option: file content: /hello/README.md 1`] = `
"# hello

## Usage

\`\`\`bash
yarn build # build code
yarn watch # build and watch code
\`\`\`
"
`;

exports[`node-new support \`author\` option: file content: /hello/package.json 1`] = `
"{
  \\"name\\": \\"hello\\",
  \\"version\\": \\"0.1.0\\",
  \\"main\\": \\"lib/index.js\\",
  \\"author\\": \\"c4605 <bolasblack@gmail.com>\\",
  \\"license\\": \\"MIT\\",
  \\"scripts\\": {
    \\"prepublish\\": \\"yarn build\\",
    \\"build\\": \\"tsc --build .\\",
    \\"watch\\": \\"tsc --watch -p .\\"
  },
  \\"devDependencies\\": {},
  \\"dependencies\\": {}
}
"
`;

exports[`node-new support \`author\` option: file content: /hello/src/index.ts 1`] = `
"export function main() {
  console.log('hello from hello')
}

if (require.main === module) {
  main()
}
"
`;

exports[`node-new support \`author\` option: file content: /hello/tsconfig.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tsconfig-node\\",
  \\"compilerOptions\\": {
    \\"outDir\\": \\"lib\\"
  },
  \\"exclude\\": [\\"./lib\\"]
}
"
`;

exports[`node-new support \`author\` option: file content: /hello/tslint.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tslint\\"
}
"
`;

exports[`node-new support \`author\` option: file structure 1`] = `
Array [
  "/hello/README.md",
  "/hello/package.json",
  "/hello/tsconfig.json",
  "/hello/tslint.json",
  "/hello/src/index.ts",
]
`;

exports[`node-new support \`author\` option: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "@c4605/toolconfs",
      ],
      "type": "default",
      "workingDirectory": "hello",
    },
  },
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "typescript",
        "@types/node",
      ],
      "type": "dev",
      "workingDirectory": "hello",
    },
  },
]
`;

exports[`node-new support \`jest\` option: file content: /hello/README.md 1`] = `
"# hello

## Usage

\`\`\`bash
yarn build # build code
yarn watch # build and watch code
\`\`\`
"
`;

exports[`node-new support \`jest\` option: file content: /hello/jest.config.js 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\\\\\.js$': 'babel-jest',
    '^.+\\\\\\\\.ts$': 'ts-jest',
  },
  testMatch: [
    '**/?(*.)+(spec|test).ts',
  ],
  testPathIgnorePatterns: [
    '/node_modules/',
  ],
  moduleFileExtensions: [
    'ts',
    'js',
    'json',
    'node',
  ],
}
"
`;

exports[`node-new support \`jest\` option: file content: /hello/package.json 1`] = `
"{
  \\"name\\": \\"hello\\",
  \\"version\\": \\"0.1.0\\",
  \\"main\\": \\"lib/index.js\\",
  \\"license\\": \\"MIT\\",
  \\"scripts\\": {
    \\"prepublish\\": \\"yarn build\\",
    \\"build\\": \\"tsc --build .\\",
    \\"watch\\": \\"tsc --watch -p .\\"
  },
  \\"devDependencies\\": {},
  \\"dependencies\\": {}
}
"
`;

exports[`node-new support \`jest\` option: file content: /hello/src/index.ts 1`] = `
"export function main() {
  console.log('hello from hello')
}

if (require.main === module) {
  main()
}
"
`;

exports[`node-new support \`jest\` option: file content: /hello/tsconfig.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tsconfig-node\\",
  \\"compilerOptions\\": {
    \\"outDir\\": \\"lib\\"
  },
  \\"exclude\\": [\\"./lib\\"]
}
"
`;

exports[`node-new support \`jest\` option: file content: /hello/tslint.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tslint\\"
}
"
`;

exports[`node-new support \`jest\` option: file structure 1`] = `
Array [
  "/hello/jest.config.js",
  "/hello/README.md",
  "/hello/package.json",
  "/hello/tsconfig.json",
  "/hello/tslint.json",
  "/hello/src/index.ts",
]
`;

exports[`node-new support \`jest\` option: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "jest",
        "jest-cli",
        "ts-jest",
        "@types/jest",
      ],
      "type": "dev",
      "workingDirectory": "hello",
    },
  },
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "@c4605/toolconfs",
      ],
      "type": "default",
      "workingDirectory": "hello",
    },
  },
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "typescript",
        "@types/node",
      ],
      "type": "dev",
      "workingDirectory": "hello",
    },
  },
]
`;

exports[`node-new works: file content: /hello/README.md 1`] = `
"# hello

## Usage

\`\`\`bash
yarn build # build code
yarn watch # build and watch code
\`\`\`
"
`;

exports[`node-new works: file content: /hello/package.json 1`] = `
"{
  \\"name\\": \\"hello\\",
  \\"version\\": \\"0.1.0\\",
  \\"main\\": \\"lib/index.js\\",
  \\"license\\": \\"MIT\\",
  \\"scripts\\": {
    \\"prepublish\\": \\"yarn build\\",
    \\"build\\": \\"tsc --build .\\",
    \\"watch\\": \\"tsc --watch -p .\\"
  },
  \\"devDependencies\\": {},
  \\"dependencies\\": {}
}
"
`;

exports[`node-new works: file content: /hello/src/index.ts 1`] = `
"export function main() {
  console.log('hello from hello')
}

if (require.main === module) {
  main()
}
"
`;

exports[`node-new works: file content: /hello/tsconfig.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tsconfig-node\\",
  \\"compilerOptions\\": {
    \\"outDir\\": \\"lib\\"
  },
  \\"exclude\\": [\\"./lib\\"]
}
"
`;

exports[`node-new works: file content: /hello/tslint.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tslint\\"
}
"
`;

exports[`node-new works: file structure 1`] = `
Array [
  "/hello/README.md",
  "/hello/package.json",
  "/hello/tsconfig.json",
  "/hello/tslint.json",
  "/hello/src/index.ts",
]
`;

exports[`node-new works: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "@c4605/toolconfs",
      ],
      "type": "default",
      "workingDirectory": "hello",
    },
  },
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "typescript",
        "@types/node",
      ],
      "type": "dev",
      "workingDirectory": "hello",
    },
  },
]
`;
