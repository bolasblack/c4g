// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`proj-tools with option \`include\` works with \`IncludeItem.Commitlint\`: file content: /.commitlintrc.js 1`] = `
"module.exports = {
  extends: ['@c4605/toolconfs/commitlintrc'],
  rules: {},
}
"
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Commitlint\`: file structure 1`] = `
Array [
  "/.commitlintrc.js",
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Commitlint\`: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "commitlint",
      ],
      "type": "dev",
      "workingDirectory": "",
    },
  },
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Githooks\`: file structure 1`] = `Array []`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Githooks\`: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "git-hook-pure",
      ],
      "type": "dev",
      "workingDirectory": "",
    },
  },
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Jest\`: file content: /jest.config.js 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\\\\\.js$': 'babel-jest',
    '^.+\\\\\\\\.ts$': 'ts-jest',
  },
  testMatch: [
    '**/?(*.)+(spec|test).ts',
  ],
  testPathIgnorePatterns: [
    '/node_modules/',
  ],
  moduleFileExtensions: [
    'ts',
    'js',
    'json',
    'node',
  ],
}
"
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Jest\`: file structure 1`] = `
Array [
  "/jest.config.js",
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Jest\`: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "jest",
        "jest-cli",
        "ts-jest",
        "@types/jest",
      ],
      "type": "dev",
      "workingDirectory": "",
    },
  },
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.LintStaged\`: file content: /lint-staged.config.js 1`] = `
"module.exports = require('@c4605/toolconfs/lint-staged.config')
"
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.LintStaged\`: file structure 1`] = `
Array [
  "/lint-staged.config.js",
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.LintStaged\`: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "lint-staged",
      ],
      "type": "dev",
      "workingDirectory": "",
    },
  },
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Renovate\`: file content: /renovate.json 1`] = `
"{
  \\"extends\\": [\\"github>bolasblack/js-toolconfs:renovate\\"],
  \\"baseBranches\\": [\\"develop\\"]
}
"
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Renovate\`: file structure 1`] = `
Array [
  "/renovate.json",
]
`;

exports[`proj-tools with option \`include\` works with \`IncludeItem.Renovate\`: rule tasks 1`] = `Array []`;

exports[`proj-tools with option \`include\` works with empty value: file structure 1`] = `Array []`;

exports[`proj-tools with option \`include\` works with empty value: rule tasks 1`] = `Array []`;

exports[`proj-tools with option \`jestReact\` do nothing if \`jest\` not included: file structure 1`] = `Array []`;

exports[`proj-tools with option \`jestReact\` do nothing if \`jest\` not included: rule tasks 1`] = `Array []`;

exports[`proj-tools with option \`jestReact\` works: file content: /jest.config.js 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\\\\\.jsx?$': 'babel-jest',
    '^.+\\\\\\\\.tsx?$': 'ts-jest',
  },
  snapshotSerializers: [
    'enzyme-to-json/serializer',
  ],
  moduleNameMapper: {
    '\\\\\\\\.(css|less|scss)$': 'identity-obj-proxy',
  },
  testMatch: [
    '**/?(*.)+(spec|test).ts?(x)',
  ],
  testPathIgnorePatterns: [
    '/node_modules/',
  ],
  moduleFileExtensions: [
    'ts',
    'tsx',
    'js',
    'jsx',
    'json',
    'node',
    'html',
  ],
}
"
`;

exports[`proj-tools with option \`jestReact\` works: file structure 1`] = `
Array [
  "/jest.config.js",
]
`;

exports[`proj-tools with option \`jestReact\` works: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/node-package-install-task",
    "options": Object {
      "packageNames": Array [
        "jest",
        "jest-cli",
        "ts-jest",
        "@types/jest",
        "enzyme",
        "enzyme-to-json",
        "enzyme-adapter-react-16",
        "identity-obj-proxy",
      ],
      "type": "dev",
      "workingDirectory": "",
    },
  },
]
`;
