// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`proj-tools with option \`include\` with \`IncludeItem.Commitlint\` match file content snapshot: file content: /.commitlintrc.js 1`] = `
"module.exports = {
  extends: ['@c4605/toolconfs/commitlintrc'],
  rules: {},
}
"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Commitlint\` match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"commitlint\\": \\"^1.0.0\\",
    \\"@commitlint/config-conventional\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Commitlint\` match file structure snapshot: file structure 1`] = `
Array [
  "/package.json",
  "/.commitlintrc.js",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Commitlint\` match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` in common case match file content snapshot: file content: /.eslintrc.json 1`] = `
"{
  \\"extends\\": [
    \\"./node_modules/@c4605/toolconfs/eslintrc.base\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.ts\\"
  ],
  \\"parserOptions\\": {
    \\"project\\": \\"./tsconfig.json\\"
  },
  \\"rules\\": {}
}
"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` in common case match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"eslint\\": \\"^1.0.0\\",
    \\"@typescript-eslint/parser\\": \\"^1.0.0\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` in common case match file structure snapshot: file structure 1`] = `
Array [
  "/.eslintrc.json",
  "/package.json",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` in common case match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` install eslint-plugin-prettier when including prettier match file content snapshot: file content: /.eslintrc.json 1`] = `
"{
  \\"extends\\": [
    \\"./node_modules/@c4605/toolconfs/eslintrc.base\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.ts\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.prettier\\"
  ],
  \\"parserOptions\\": {
    \\"project\\": \\"./tsconfig.json\\"
  },
  \\"rules\\": {}
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` install eslint-plugin-prettier when including prettier match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"eslint\\": \\"^1.0.0\\",
    \\"eslint-config-prettier\\": \\"^1.0.0\\",
    \\"@typescript-eslint/parser\\": \\"^1.0.0\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^1.0.0\\",
    \\"prettier\\": \\"^1.0.0\\"
  },
  \\"prettier\\": \\"@c4605/toolconfs/prettierrc\\",
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` install eslint-plugin-prettier when including prettier match file structure snapshot: file structure 1`] = `
Array [
  "/.eslintrc.json",
  "/package.json",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Eslint\` install eslint-plugin-prettier when including prettier match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Githooks\` match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"git-hook-pure\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Githooks\` match file structure snapshot: file structure 1`] = `
Array [
  "/package.json",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Githooks\` match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Jest\` match file content snapshot: file content: /jest.config.js 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\\\\\.js$': 'babel-jest',
    '^.+\\\\\\\\.ts$': 'ts-jest',
  },
  testMatch: [
    '**/?(*.)+(spec|test).ts',
  ],
  testPathIgnorePatterns: [
    '/node_modules/',
  ],
  moduleFileExtensions: [
    'ts',
    'js',
    'json',
    'node',
  ],
}
"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Jest\` match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"jest\\": \\"^1.0.0\\",
    \\"jest-cli\\": \\"^1.0.0\\",
    \\"ts-jest\\": \\"^1.0.0\\",
    \\"@types/jest\\": \\"^1.0.0\\"
  },
  \\"scripts\\": {
    \\"test\\": \\"jest ./src\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Jest\` match file structure snapshot: file structure 1`] = `
Array [
  "/package.json",
  "/jest.config.js",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Jest\` match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.LintStaged\` match file content snapshot: file content: /lint-staged.config.js 1`] = `
"module.exports = require('@c4605/toolconfs/lint-staged.config')
"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.LintStaged\` match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"lint-staged\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.LintStaged\` match file structure snapshot: file structure 1`] = `
Array [
  "/package.json",
  "/lint-staged.config.js",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.LintStaged\` match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Prettier\` match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"prettier\\": \\"^1.0.0\\"
  },
  \\"prettier\\": \\"@c4605/toolconfs/prettierrc\\",
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Prettier\` match file structure snapshot: file structure 1`] = `
Array [
  "/package.json",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Prettier\` match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Renovate\` match file content snapshot: file content: /package.json 1`] = `
"{
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Renovate\` match file content snapshot: file content: /renovate.json 1`] = `
"{
  \\"extends\\": [\\"github>bolasblack/js-toolconfs:renovate\\"],
  \\"baseBranches\\": [\\"develop\\"]
}
"
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Renovate\` match file structure snapshot: file structure 1`] = `
Array [
  "/renovate.json",
  "/package.json",
]
`;

exports[`proj-tools with option \`include\` with \`IncludeItem.Renovate\` match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`include\` works with empty value match file structure snapshot: file structure 1`] = `Array []`;

exports[`proj-tools with option \`include\` works with empty value match tasks snapshot: rule tasks 1`] = `Array []`;

exports[`proj-tools with option \`jestReact\` do nothing if \`jest\` not included match file structure snapshot: file structure 1`] = `Array []`;

exports[`proj-tools with option \`jestReact\` do nothing if \`jest\` not included match tasks snapshot: rule tasks 1`] = `Array []`;

exports[`proj-tools with option \`jestReact\` in common case match file content snapshot: file content: /jest.config.js 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\\\\\.jsx?$': 'babel-jest',
    '^.+\\\\\\\\.tsx?$': 'ts-jest',
  },
  snapshotSerializers: [
    'enzyme-to-json/serializer',
  ],
  moduleNameMapper: {
    '\\\\\\\\.(css|less|scss)$': 'identity-obj-proxy',
  },
  testMatch: [
    '**/?(*.)+(spec|test).ts?(x)',
  ],
  testPathIgnorePatterns: [
    '/node_modules/',
  ],
  moduleFileExtensions: [
    'ts',
    'tsx',
    'js',
    'jsx',
    'json',
    'node',
    'html',
  ],
}
"
`;

exports[`proj-tools with option \`jestReact\` in common case match file content snapshot: file content: /package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"jest\\": \\"^1.0.0\\",
    \\"jest-cli\\": \\"^1.0.0\\",
    \\"ts-jest\\": \\"^1.0.0\\",
    \\"@types/jest\\": \\"^1.0.0\\",
    \\"enzyme\\": \\"^1.0.0\\",
    \\"enzyme-to-json\\": \\"^1.0.0\\",
    \\"enzyme-adapter-react-16\\": \\"^1.0.0\\",
    \\"identity-obj-proxy\\": \\"^1.0.0\\"
  },
  \\"scripts\\": {
    \\"test\\": \\"jest ./src\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`jestReact\` in common case match file structure snapshot: file structure 1`] = `
Array [
  "/package.json",
  "/jest.config.js",
]
`;

exports[`proj-tools with option \`jestReact\` in common case match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": undefined,
      },
    },
  },
]
`;

exports[`proj-tools with option \`jestReact\` support \`cwd\` option match file content snapshot: file content: /test/jest.config.js 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\\\\\.js$': 'babel-jest',
    '^.+\\\\\\\\.ts$': 'ts-jest',
  },
  testMatch: [
    '**/?(*.)+(spec|test).ts',
  ],
  testPathIgnorePatterns: [
    '/node_modules/',
  ],
  moduleFileExtensions: [
    'ts',
    'js',
    'json',
    'node',
  ],
}
"
`;

exports[`proj-tools with option \`jestReact\` support \`cwd\` option match file content snapshot: file content: /test/package.json 1`] = `
"{
  \\"devDependencies\\": {
    \\"jest\\": \\"^1.0.0\\",
    \\"jest-cli\\": \\"^1.0.0\\",
    \\"ts-jest\\": \\"^1.0.0\\",
    \\"@types/jest\\": \\"^1.0.0\\"
  },
  \\"scripts\\": {
    \\"test\\": \\"jest ./src\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\"
  }
}"
`;

exports[`proj-tools with option \`jestReact\` support \`cwd\` option match file structure snapshot: file structure 1`] = `
Array [
  "/test/package.json",
  "/test/jest.config.js",
]
`;

exports[`proj-tools with option \`jestReact\` support \`cwd\` option match tasks snapshot: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "test",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "test",
      },
    },
  },
]
`;
