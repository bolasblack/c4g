// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react-new add spec files if user added proj-tool jest: file content: /hello/.eslintrc.json 1`] = `
"{
  \\"extends\\": [
    \\"./node_modules/@c4605/toolconfs/eslintrc.base\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.ts\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.prettier\\"
  ],
  \\"parserOptions\\": {
    \\"project\\": \\"./tsconfig.json\\"
  },
  \\"rules\\": {}
}"
`;

exports[`react-new add spec files if user added proj-tool jest: file content: /hello/README.md 1`] = `
"# hello

## Usage

\`\`\`bash
yarn start # watch and serve code
yarn build # build code
\`\`\`
"
`;

exports[`react-new add spec files if user added proj-tool jest: file content: /hello/package.json 1`] = `
"{
  \\"name\\": \\"hello\\",
  \\"version\\": \\"0.1.0\\",
  \\"main\\": null,
  \\"author\\": \\"c4605 <bolasblack@gmail.com>\\",
  \\"license\\": \\"MIT\\",
  \\"scripts\\": {
    \\"start\\": \\"poi -r ts-node/register --parallel --serve ./src\\",
    \\"build\\": \\"poi -r ts-node/register --parallel ./src\\"
  },
  \\"devDependencies\\": {
    \\"prettier\\": \\"^1.0.0\\",
    \\"eslint\\": \\"^1.0.0\\",
    \\"eslint-config-prettier\\": \\"^1.0.0\\",
    \\"@typescript-eslint/parser\\": \\"^1.0.0\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^1.0.0\\",
    \\"typescript\\": \\"^1.0.0\\",
    \\"ts-node\\": \\"^1.0.0\\",
    \\"@types/node\\": \\"^1.0.0\\",
    \\"poi\\": \\"^1.0.0\\",
    \\"@types/poi\\": \\"^1.0.0\\",
    \\"@poi/plugin-typescript\\": \\"^1.0.0\\",
    \\"@poi/plugin-astroturf\\": \\"^1.0.0\\",
    \\"sass\\": \\"^1.0.0\\",
    \\"sass-loader\\": \\"^1.0.0\\",
    \\"react-hot-loader\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\",
    \\"react\\": \\"^1.0.0\\",
    \\"@types/react\\": \\"^1.0.0\\",
    \\"react-dom\\": \\"^1.0.0\\",
    \\"@types/react-dom\\": \\"^1.0.0\\",
    \\"astroturf\\": \\"^1.0.0\\"
  },
  \\"prettier\\": \\"@c4605/toolconfs/prettierrc\\"
}"
`;

exports[`react-new add spec files if user added proj-tool jest: file content: /hello/poi.config.ts 1`] = `
"import { Config } from 'poi'

const config: Config = {
  entry: 'src/index.tsx',
  plugins: [
    {
      resolve: '@poi/plugin-typescript',
      options: {},
    },
    {
      resolve: '@poi/plugin-astroturf',
      options: {
        loaderOptions: {
          extension: '.scss',
        },
      },
    },
  ],
}

export default config
"
`;

exports[`react-new add spec files if user added proj-tool jest: file content: /hello/src/index.tsx 1`] = `
"import 'react-hot-loader'
import * as React from 'react'
import * as ReactDOM from 'react-dom'
import { css } from 'astroturf'

function renderApp() {
  ReactDOM.render(<h1>It works</h1>, document.getElementById('app')!)
}

renderApp()
;(module as any).hot.accept(renderApp)

css\`
  h1 {
    font-size: 32px;
  }
\`
"
`;

exports[`react-new add spec files if user added proj-tool jest: file content: /hello/tsconfig.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tsconfig\\",
  \\"compilerOptions\\": {
    \\"jsx\\": \\"react\\"
  }
}"
`;

exports[`react-new add spec files if user added proj-tool jest: file structure 1`] = `
Array [
  "/hello/package.json",
  "/hello/.eslintrc.json",
  "/hello/README.md",
  "/hello/poi.config.ts",
  "/hello/tsconfig.json",
  "/hello/src/index.tsx",
]
`;

exports[`react-new add spec files if user added proj-tool jest: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
]
`;

exports[`react-new support \`author\` option: file content: /hello/.eslintrc.json 1`] = `
"{
  \\"extends\\": [
    \\"./node_modules/@c4605/toolconfs/eslintrc.base\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.ts\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.prettier\\"
  ],
  \\"parserOptions\\": {
    \\"project\\": \\"./tsconfig.json\\"
  },
  \\"rules\\": {}
}"
`;

exports[`react-new support \`author\` option: file content: /hello/README.md 1`] = `
"# hello

## Usage

\`\`\`bash
yarn start # watch and serve code
yarn build # build code
\`\`\`
"
`;

exports[`react-new support \`author\` option: file content: /hello/package.json 1`] = `
"{
  \\"name\\": \\"hello\\",
  \\"version\\": \\"0.1.0\\",
  \\"main\\": null,
  \\"author\\": \\"c4605 <bolasblack@gmail.com>\\",
  \\"license\\": \\"MIT\\",
  \\"scripts\\": {
    \\"start\\": \\"poi -r ts-node/register --parallel --serve ./src\\",
    \\"build\\": \\"poi -r ts-node/register --parallel ./src\\"
  },
  \\"devDependencies\\": {
    \\"prettier\\": \\"^1.0.0\\",
    \\"eslint\\": \\"^1.0.0\\",
    \\"eslint-config-prettier\\": \\"^1.0.0\\",
    \\"@typescript-eslint/parser\\": \\"^1.0.0\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^1.0.0\\",
    \\"typescript\\": \\"^1.0.0\\",
    \\"ts-node\\": \\"^1.0.0\\",
    \\"@types/node\\": \\"^1.0.0\\",
    \\"poi\\": \\"^1.0.0\\",
    \\"@types/poi\\": \\"^1.0.0\\",
    \\"@poi/plugin-typescript\\": \\"^1.0.0\\",
    \\"@poi/plugin-astroturf\\": \\"^1.0.0\\",
    \\"sass\\": \\"^1.0.0\\",
    \\"sass-loader\\": \\"^1.0.0\\",
    \\"react-hot-loader\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\",
    \\"react\\": \\"^1.0.0\\",
    \\"@types/react\\": \\"^1.0.0\\",
    \\"react-dom\\": \\"^1.0.0\\",
    \\"@types/react-dom\\": \\"^1.0.0\\",
    \\"astroturf\\": \\"^1.0.0\\"
  },
  \\"prettier\\": \\"@c4605/toolconfs/prettierrc\\"
}"
`;

exports[`react-new support \`author\` option: file content: /hello/poi.config.ts 1`] = `
"import { Config } from 'poi'

const config: Config = {
  entry: 'src/index.tsx',
  plugins: [
    {
      resolve: '@poi/plugin-typescript',
      options: {},
    },
    {
      resolve: '@poi/plugin-astroturf',
      options: {
        loaderOptions: {
          extension: '.scss',
        },
      },
    },
  ],
}

export default config
"
`;

exports[`react-new support \`author\` option: file content: /hello/src/index.tsx 1`] = `
"import 'react-hot-loader'
import * as React from 'react'
import * as ReactDOM from 'react-dom'
import { css } from 'astroturf'

function renderApp() {
  ReactDOM.render(<h1>It works</h1>, document.getElementById('app')!)
}

renderApp()
;(module as any).hot.accept(renderApp)

css\`
  h1 {
    font-size: 32px;
  }
\`
"
`;

exports[`react-new support \`author\` option: file content: /hello/tsconfig.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tsconfig\\",
  \\"compilerOptions\\": {
    \\"jsx\\": \\"react\\"
  }
}"
`;

exports[`react-new support \`author\` option: file structure 1`] = `
Array [
  "/hello/package.json",
  "/hello/.eslintrc.json",
  "/hello/README.md",
  "/hello/poi.config.ts",
  "/hello/tsconfig.json",
  "/hello/src/index.tsx",
]
`;

exports[`react-new support \`author\` option: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
]
`;

exports[`react-new works: file content: /hello/.eslintrc.json 1`] = `
"{
  \\"extends\\": [
    \\"./node_modules/@c4605/toolconfs/eslintrc.base\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.ts\\",
    \\"./node_modules/@c4605/toolconfs/eslintrc.prettier\\"
  ],
  \\"parserOptions\\": {
    \\"project\\": \\"./tsconfig.json\\"
  },
  \\"rules\\": {}
}"
`;

exports[`react-new works: file content: /hello/README.md 1`] = `
"# hello

## Usage

\`\`\`bash
yarn start # watch and serve code
yarn build # build code
\`\`\`
"
`;

exports[`react-new works: file content: /hello/package.json 1`] = `
"{
  \\"name\\": \\"hello\\",
  \\"version\\": \\"0.1.0\\",
  \\"main\\": null,
  \\"license\\": \\"MIT\\",
  \\"scripts\\": {
    \\"start\\": \\"poi -r ts-node/register --parallel --serve ./src\\",
    \\"build\\": \\"poi -r ts-node/register --parallel ./src\\"
  },
  \\"devDependencies\\": {
    \\"prettier\\": \\"^1.0.0\\",
    \\"eslint\\": \\"^1.0.0\\",
    \\"eslint-config-prettier\\": \\"^1.0.0\\",
    \\"@typescript-eslint/parser\\": \\"^1.0.0\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^1.0.0\\",
    \\"typescript\\": \\"^1.0.0\\",
    \\"ts-node\\": \\"^1.0.0\\",
    \\"@types/node\\": \\"^1.0.0\\",
    \\"poi\\": \\"^1.0.0\\",
    \\"@types/poi\\": \\"^1.0.0\\",
    \\"@poi/plugin-typescript\\": \\"^1.0.0\\",
    \\"@poi/plugin-astroturf\\": \\"^1.0.0\\",
    \\"sass\\": \\"^1.0.0\\",
    \\"sass-loader\\": \\"^1.0.0\\",
    \\"react-hot-loader\\": \\"^1.0.0\\"
  },
  \\"dependencies\\": {
    \\"@c4605/toolconfs\\": \\"^1.0.0\\",
    \\"react\\": \\"^1.0.0\\",
    \\"@types/react\\": \\"^1.0.0\\",
    \\"react-dom\\": \\"^1.0.0\\",
    \\"@types/react-dom\\": \\"^1.0.0\\",
    \\"astroturf\\": \\"^1.0.0\\"
  },
  \\"prettier\\": \\"@c4605/toolconfs/prettierrc\\"
}"
`;

exports[`react-new works: file content: /hello/poi.config.ts 1`] = `
"import { Config } from 'poi'

const config: Config = {
  entry: 'src/index.tsx',
  plugins: [
    {
      resolve: '@poi/plugin-typescript',
      options: {},
    },
    {
      resolve: '@poi/plugin-astroturf',
      options: {
        loaderOptions: {
          extension: '.scss',
        },
      },
    },
  ],
}

export default config
"
`;

exports[`react-new works: file content: /hello/src/index.tsx 1`] = `
"import 'react-hot-loader'
import * as React from 'react'
import * as ReactDOM from 'react-dom'
import { css } from 'astroturf'

function renderApp() {
  ReactDOM.render(<h1>It works</h1>, document.getElementById('app')!)
}

renderApp()
;(module as any).hot.accept(renderApp)

css\`
  h1 {
    font-size: 32px;
  }
\`
"
`;

exports[`react-new works: file content: /hello/tsconfig.json 1`] = `
"{
  \\"extends\\": \\"@c4605/toolconfs/tsconfig\\",
  \\"compilerOptions\\": {
    \\"jsx\\": \\"react\\"
  }
}"
`;

exports[`react-new works: file structure 1`] = `
Array [
  "/hello/package.json",
  "/hello/.eslintrc.json",
  "/hello/README.md",
  "/hello/poi.config.ts",
  "/hello/tsconfig.json",
  "/hello/src/index.tsx",
]
`;

exports[`react-new works: rule tasks 1`] = `
Array [
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
  Object {
    "name": "@c4g/shell-exec-task",
    "options": Object {
      "args": Array [],
      "command": "yarn",
      "options": Object {
        "cwd": "hello",
      },
    },
  },
]
`;
